---
title: "Draft Quarto document"
author: "Mikkel Alnor"
date: "`r Sys.Date()`"
format: html
theme: Darkly
---

## Setup chunk

```{r setup}
#| include: false

pak::pak()
library(tidyverse)
library(here)
library(snakecase)
library(readr)
library(fs)
library(purrr)
library(stringr)
library(dplyr)
library(lubridate)
#usethis::use_package("")

source(here("R/functions.R"))

cgm_data <- here::here("data-raw/dime/cgm") |> 
  import_csv() |> 
  clean_cgm()
  

sleep_data <- here("data-raw/dime/sleep") |>
  import_csv() |>
  clean_sleep()
  

```

# Importing DIME data

## Importing CGM data manually

```{r eval=FALSE}
cgm_101 <- here("data-raw/dime/cgm/101.csv") |>
  read_csv(show_col_types = FALSE,
           name_repair = to_snake_case,
           n_max = 100)

sleep_101 <- here("data-raw/dime/sleep/101.csv") |>
  read_csv(show_col_types = FALSE,
           name_repair = to_snake_case,
           n_max = 50)



View(sleep_101)

```

## Functions

### Adding function

```{r eval=FALSE}
#' Adds two numbers
#'
#' @param num1 is a number
#' @param num2 is a number
#'
#' @returns gives the sum of the two numbers
#' @export
add_numbers <- function(num1, num2) {
  added <- num1 + num2
  return(added)
}

```

### Importing functions individually(not general)

```{r eval=FALSE}

#' Import function CGM
#'
#' @param file_path File path for cgm data
#'
#' @returns Imported file as data.frame
import_cgm <- function(file_path) {
  cgm <- file_path |>
    read_csv(
      show_col_types = FALSE,
      name_repair = to_snake_case,
      n_max = 100
    )
  return(cgm)
}

#' Import function Sleep
#'
#' @param file_path File path for Sleep data
#'
#' @returns Imported file data.frame
import_sleep <- function(file_path) {
  sleep <- file_path |>
    read_csv(
      show_col_types = FALSE,
      name_repair = to_snake_case,
      n_max = 100
    )
  return(sleep)
}

here("data-raw/dime/cgm/104.csv") |>
  import_cgm()


here("data-raw/dime/sleep/101.csv") |>
  import_sleep()


```

### General import function use example

```{r eval=FALSE}
#import_data_snake("sleep","105",50)

#here::here("data-raw/dime/cgm/101.csv") |> 
#import_dime() 

```

```{r eval = FALSE}
#cgm_files <- here::here("data-raw/dime/cgm/") |>
#  dir_ls(glob = "*.csv")
#sleep_files <- here::here("data-raw/dime/sleep/") |>
#  dir_ls(glob = "*.csv")

# With pipes
#cgm_data <- cgm_files |> 
#  map(import_dime) |> 
#  list_rbind(names_to = "file_path_id")


#sleep_data <- sleep_files |> 
#  map(import_dime) |> 
#  list_rbind(names_to = "file_path_id")

```

## Exercise: Convert map to function and use on sleep

```{r eval = FALSE}
#test <- here("data-raw/dime/sleep/") |>
#import_csv()
```

## Cleaning characters and dates

```{r eval=FALSE}
#library(stringr)
#library(lubridate)

text <- "data-raw/dime/sleep/101.csv"

str_extract(text,"\\d{3}")
str_extract(text,"[:digit:]+\\.csv$")
```

## Using regex for ID extraction

```{r eval=FALSE}

cgm_data |> 
  dplyr::mutate(
    id = stringr::str_extract(file_path_id,"[:digit:]+\\.csv$",) |> 
      stringr::str_remove("\\.csv$") |> 
      as.integer(),
    .before = file_path_id
  ) |>
  select(-file_path_id)

```

```{r eval =FALSE}

cgm_data
sleep_data

```

## Working with dates  extraction

```{r eval=FALSE}

time_extraction <- function(data){
  data_output <- data |>  
    dplyr::mutate(
      date = lubridate::as_date(device_timestamp),
      hour = lubridate::hour(device_timestamp),
      .before = device_timestamp
  ) |> 
  dplyr::select(-device_timestamp)
  
  return(data_output)
}


test2 <- here::here("data-raw/dime/cgm") |> 
  import_csv() |> 
  get_participant_id() |> 
  time_extraction()
test2
```

```{r eval=FALSE}

prepare_dates <- function(data,column){
  data_output <- data |>  
    dplyr::mutate(
      date = lubridate::as_date({{column}}),
      hour = lubridate::hour({{column}}),
      .before = {{column}}
  ) |> 
  dplyr::select(-{{column}})
  
  return(data_output)
}

```

## Section 10

```{r}


```
